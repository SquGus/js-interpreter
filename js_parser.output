Rules useless in parser due to conflicts

   65 ResultSignature: %empty


State 62 conflicts: 9 reduce/reduce
State 103 conflicts: 1 shift/reduce
State 197 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program "end of file"

    1 Program: Statements

    2 Statements: Statements Statement
    3           | Statement

    4 Statement: CodeStatement
    5          | Definition

    6 CodeStatement: EmptyStatement
    7              | ExpressionStatement STMT_TER_OP
    8              | Block
    9              | IfStatement
   10              | SwitchStatement
   11              | DoStatement STMT_TER_OP
   12              | WhileStatement
   13              | ForStatement
   14              | ContinueStatement STMT_TER_OP
   15              | BreakStatement STMT_TER_OP
   16              | ReturnStatement STMT_TER_OP

   17 Definition: VariableDefinition STMT_TER_OP
   18           | FunctionDefinition

   19 EmptyStatement: STMT_TER_OP

   20 ExpressionStatement: Expression

   21 Block: OPEN_C Statements CLOSE_C

   22 IfStatement: IF ParenthesizedExpression CodeStatement
   23            | IF ParenthesizedExpression CodeStatement ELSE CodeStatement

   24 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C CLOSE_C
   25                | SWITCH ParenthesizedExpression OPEN_C CaseGroups LastCaseGroup CLOSE_C

   26 CaseGroups: %empty
   27           | CaseGroups CaseGroup

   28 CaseGroup: CaseGuards CaseStatementsPrefix

   29 LastCaseGroup: CaseGuards CaseStatements

   30 CaseGuards: CASE Expression PA_OP
   31           | DEFAULT PA_OP

   32 CaseStatements: CodeStatement
   33               | CaseStatementsPrefix CodeStatement

   34 CaseStatementsPrefix: CodeStatement
   35                     | CaseStatementsPrefix CodeStatement

   36 DoStatement: DO CodeStatement WHILE ParenthesizedExpression

   37 WhileStatement: WHILE ParenthesizedExpression CodeStatement

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

   39 ForInitializer: %empty
   40               | Expression
   41               | VariableDefinitionKind VariableBinding

   42 ContinueStatement: CONTINUE OptionalLabel

   43 BreakStatement: BREAK OptionalLabel

   44 OptionalLabel: %empty
   45              | Identifier

   46 ReturnStatement: RETURN OptionalExpression

   47 VariableDefinition: VariableDefinitionKind VariableBindingList

   48 VariableDefinitionKind: VAR
   49                       | CONST

   50 VariableBindingList: VariableBinding
   51                    | VariableBindingList SEP_OP VariableBinding

   52 VariableBinding: TypedIdentifier VariableInitializer

   53 TypedIdentifier: Identifier
   54                | TypeExpression Identifier

   55 VariableInitializer: %empty
   56                    | VA_OP AssignmentExpression

   57 FunctionDefinition: NamedFunction

   58 FunctionSignature: ParameterSignature ResultSignature

   59 ParameterSignature: OPEN_P Parameters CLOSE_P

   60 Parameters: %empty
   61           | RequiredParameters

   62 RequiredParameters: RequiredParameter
   63                   | RequiredParameters SEP_OP RequiredParameter

   64 RequiredParameter: TypedIdentifier

   65 ResultSignature: %empty
   66                | TypeExpression

   67 Expression: AssignmentExpression
   68           | Expression SEP_OP AssignmentExpression

   69 OptionalExpression: Expression
   70                   | %empty

   71 AssignmentExpression: ConditionalExpression
   72                     | PostfixExpression VA_OP AssignmentExpression
   73                     | PostfixExpression CompoundAssignment AssignmentExpression

   74 CompoundAssignment: SHORT_MUL_OP
   75                   | SHORT_DIV_OP
   76                   | SHORT_MOD_OP
   77                   | SHORT_ADD_OP
   78                   | SHORT_SUB_OP
   79                   | SHORT_BIT_SHIFT_L_OP
   80                   | SHORT_BIT_SHIFT_S_R_OP
   81                   | SHORT_BIT_SHIFT_Z_R_OP
   82                   | SHORT_BIT_AND_OP
   83                   | SHORT_BIT_XOR_OP
   84                   | SHORT_BIT_OR_OP

   85 ParenthesizedExpression: OPEN_P Expression CLOSE_P

   86 Identifier: ID

   87 TypeExpression: NonAssignmentExpression

   88 ConditionalExpression: LogicalOrExpression
   89                      | LogicalOrExpression TERNARY_OP AssignmentExpression PA_OP AssignmentExpression

   90 NonAssignmentExpression: LogicalOrExpression
   91                        | LogicalOrExpression TERNARY_OP NonAssignmentExpression PA_OP NonAssignmentExpression

   92 PostfixExpression: FullPostfixExpression
   93                  | ShortNewExpression

   94 FullPostfixExpression: PrimaryExpression
   95                      | FullNewExpression
   96                      | FullPostfixExpression MemberOperator
   97                      | FullPostfixExpression Arguments
   98                      | PostfixExpression UNIT_ADD_OP
   99                      | PostfixExpression UNIT_SUB_OP
  100                      | PostfixExpression LOGIC_NOT_OP
  101                      | PostfixExpression BIT_NOT_OP

  102 FullNewExpression: NEW FullNewSubexpression Arguments

  103 ShortNewExpression: NEW ShortNewSubexpression

  104 FullNewSubexpression: PrimaryExpression
  105                     | FullNewSubexpression MemberOperator
  106                     | FullNewExpression

  107 ShortNewSubexpression: FullNewSubexpression
  108                      | ShortNewExpression

  109 MemberOperator: OPEN_B ArgumentList CLOSE_B
  110               | MEM_ACC_OP QualifiedIdentifier
  111               | MEM_ACC_OP ParenthesizedExpression

  112 Arguments: OPEN_P ArgumentList CLOSE_P

  113 ArgumentList: %empty
  114             | ArgumentListPrefix

  115 ArgumentListPrefix: AssignmentExpression
  116                   | ArgumentListPrefix SEP_OP AssignmentExpression

  117 PrimaryExpression: SimpleExpression
  118                  | FunctionExpression
  119                  | ObjectLiteral

  120 SimpleExpression: NULL_V
  121                 | TRUE_V
  122                 | FALSE_V
  123                 | INT_V
  124                 | FLT_V
  125                 | STRING
  126                 | QualifiedIdentifier
  127                 | ParenthesizedExpression
  128                 | ArrayLiteral

  129 FunctionExpression: AnonymousFunction
  130                   | NamedFunction

  131 AnonymousFunction: FUNCTION FunctionSignature Block

  132 NamedFunction: FUNCTION Identifier FunctionSignature Block

  133 QualifiedIdentifier: Identifier

  134 ObjectLiteral: OPEN_C CLOSE_C
  135              | OPEN_C FieldList CLOSE_C

  136 FieldList: LiteralField
  137          | FieldList SEP_OP LiteralField

  138 LiteralField: QualifiedIdentifier PA_OP AssignmentExpression

  139 ArrayLiteral: OPEN_B CLOSE_B
  140             | OPEN_B ElementList CLOSE_B

  141 ElementList: LiteralElement
  142            | ElementList SEP_OP LiteralElement

  143 LiteralElement: AssignmentExpression

  144 LogicalOrExpression: LogicalAndExpression
  145                    | LogicalOrExpression LOGIC_OR_OP LogicalAndExpression

  146 LogicalAndExpression: BitwiseOrExpression
  147                     | LogicalAndExpression LOGIC_AND_OP BitwiseOrExpression

  148 BitwiseOrExpression: BitwiseXorExpression
  149                    | BitwiseOrExpression BIT_OR_OP BitwiseXorExpression

  150 BitwiseXorExpression: BitwiseAndExpression
  151                     | BitwiseXorExpression BIT_XOR_OP BitwiseAndExpression

  152 BitwiseAndExpression: EqualityExpression
  153                     | BitwiseAndExpression BIT_AND_OP EqualityExpression

  154 EqualityExpression: RelationalExpression
  155                   | EqualityExpression EQ_V_OP RelationalExpression
  156                   | EqualityExpression NEG_V_OP RelationalExpression
  157                   | EqualityExpression EQ_VT_OP RelationalExpression
  158                   | EqualityExpression NEG_VT_OP RelationalExpression

  159 RelationalExpression: ShiftExpression
  160                     | RelationalExpression L_OP ShiftExpression
  161                     | RelationalExpression G_OP ShiftExpression
  162                     | RelationalExpression LE_OP ShiftExpression
  163                     | RelationalExpression GE_OP ShiftExpression
  164                     | RelationalExpression INSTANCEOF ShiftExpression

  165 ShiftExpression: AdditiveExpression
  166                | ShiftExpression BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression BIT_SHIFT_Z_R_OP AdditiveExpression

  169 AdditiveExpression: MultiplicativeExpression
  170                   | AdditiveExpression ADD_OP MultiplicativeExpression
  171                   | AdditiveExpression SUB_OP MultiplicativeExpression

  172 MultiplicativeExpression: UnaryExpression
  173                         | MultiplicativeExpression MUL_OP UnaryExpression
  174                         | MultiplicativeExpression DIV_OP UnaryExpression
  175                         | MultiplicativeExpression MOD_OP UnaryExpression

  176 UnaryExpression: PostfixExpression
  177                | UNIT_ADD_OP PostfixExpression
  178                | UNIT_SUB_OP PostfixExpression
  179                | ADD_OP UnaryExpression
  180                | SUB_OP UnaryExpression
  181                | BIT_NOT_OP UnaryExpression
  182                | LOGIC_NOT_OP UnaryExpression


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
NULL_V (258) 120
TRUE_V (259) 121
FALSE_V (260) 122
FLT_V (261) 124
INT_V (262) 123
STRING (263) 125
BIT_NOT_OP (264) 101 181
CLOSE_C (265) 21 24 25 134 135
OPEN_C (266) 21 24 25 134 135
CLOSE_B (267) 109 139 140
OPEN_B (268) 109 139 140
CLOSE_P (269) 38 59 85 112
OPEN_P (270) 38 59 85 112
TERNARY_OP (271) 89 91
LOGIC_OR_OP (272) 145
SHORT_BIT_OR_OP (273) 84
BIT_OR_OP (274) 149
SHORT_BIT_XOR_OP (275) 83
BIT_XOR_OP (276) 151
SHORT_BIT_SHIFT_Z_R_OP (277) 81
BIT_SHIFT_Z_R_OP (278) 168
SHORT_BIT_SHIFT_S_R_OP (279) 80
BIT_SHIFT_S_R_OP (280) 167
GE_OP (281) 163
G_OP (282) 161
EQ_VT_OP (283) 157
EQ_V_OP (284) 155
VA_OP (285) 56 72
LE_OP (286) 162
SHORT_BIT_SHIFT_L_OP (287) 79
BIT_SHIFT_L_OP (288) 166
L_OP (289) 160
STMT_TER_OP (290) 7 11 14 15 16 17 19 38
PA_OP (291) 30 31 89 91 138
SHORT_DIV_OP (292) 75
DIV_OP (293) 174
MEM_ACC_OP (294) 110 111
SHORT_SUB_OP (295) 78
UNIT_SUB_OP (296) 99 178
SUB_OP (297) 171 180
SEP_OP (298) 51 63 68 116 137 142
SHORT_ADD_OP (299) 77
UNIT_ADD_OP (300) 98 177
ADD_OP (301) 170 179
SHORT_MUL_OP (302) 74
MUL_OP (303) 173
SHORT_BIT_AND_OP (304) 82
LOGIC_AND_OP (305) 147
BIT_AND_OP (306) 153
SHORT_MOD_OP (307) 76
MOD_OP (308) 175
NEG_VT_OP (309) 158
NEG_V_OP (310) 156
LOGIC_NOT_OP (311) 100 182
BREAK (312) 43
CASE (313) 30
CONST (314) 49
CONTINUE (315) 42
DEFAULT (316) 31
DO (317) 36
ELSE (318) 23
FOR (319) 38
FUNCTION (320) 131 132
IF (321) 22 23
INSTANCEOF (322) 164
NEW (323) 102 103
RETURN (324) 46
SWITCH (325) 24 25
VAR (326) 48
WHILE (327) 36 37
ID (328) 86


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
Program (75)
    on left: 1, on right: 0
Statements (76)
    on left: 2 3, on right: 1 2 21
Statement (77)
    on left: 4 5, on right: 2 3
CodeStatement (78)
    on left: 6 7 8 9 10 11 12 13 14 15 16, on right: 4 22 23 32 33
    34 35 36 37 38
Definition (79)
    on left: 17 18, on right: 5
EmptyStatement (80)
    on left: 19, on right: 6
ExpressionStatement (81)
    on left: 20, on right: 7
Block (82)
    on left: 21, on right: 8 131 132
IfStatement (83)
    on left: 22 23, on right: 9
SwitchStatement (84)
    on left: 24 25, on right: 10
CaseGroups (85)
    on left: 26 27, on right: 25 27
CaseGroup (86)
    on left: 28, on right: 27
LastCaseGroup (87)
    on left: 29, on right: 25
CaseGuards (88)
    on left: 30 31, on right: 28 29
CaseStatements (89)
    on left: 32 33, on right: 29
CaseStatementsPrefix (90)
    on left: 34 35, on right: 28 33 35
DoStatement (91)
    on left: 36, on right: 11
WhileStatement (92)
    on left: 37, on right: 12
ForStatement (93)
    on left: 38, on right: 13
ForInitializer (94)
    on left: 39 40 41, on right: 38
ContinueStatement (95)
    on left: 42, on right: 14
BreakStatement (96)
    on left: 43, on right: 15
OptionalLabel (97)
    on left: 44 45, on right: 42 43
ReturnStatement (98)
    on left: 46, on right: 16
VariableDefinition (99)
    on left: 47, on right: 17
VariableDefinitionKind (100)
    on left: 48 49, on right: 41 47
VariableBindingList (101)
    on left: 50 51, on right: 47 51
VariableBinding (102)
    on left: 52, on right: 41 50 51
TypedIdentifier (103)
    on left: 53 54, on right: 52 64
VariableInitializer (104)
    on left: 55 56, on right: 52
FunctionDefinition (105)
    on left: 57, on right: 18
FunctionSignature (106)
    on left: 58, on right: 131 132
ParameterSignature (107)
    on left: 59, on right: 58
Parameters (108)
    on left: 60 61, on right: 59
RequiredParameters (109)
    on left: 62 63, on right: 61 63
RequiredParameter (110)
    on left: 64, on right: 62 63
ResultSignature (111)
    on left: 65 66, on right: 58
Expression (112)
    on left: 67 68, on right: 20 30 40 68 69 85
OptionalExpression (113)
    on left: 69 70, on right: 38 46
AssignmentExpression (114)
    on left: 71 72 73, on right: 56 67 68 72 73 89 115 116 138 143
CompoundAssignment (115)
    on left: 74 75 76 77 78 79 80 81 82 83 84, on right: 73
ParenthesizedExpression (116)
    on left: 85, on right: 22 23 24 25 36 37 111 127
Identifier (117)
    on left: 86, on right: 45 53 54 132 133
TypeExpression (118)
    on left: 87, on right: 54 66
ConditionalExpression (119)
    on left: 88 89, on right: 71
NonAssignmentExpression (120)
    on left: 90 91, on right: 87 91
PostfixExpression (121)
    on left: 92 93, on right: 72 73 98 99 100 101 176 177 178
FullPostfixExpression (122)
    on left: 94 95 96 97 98 99 100 101, on right: 92 96 97
FullNewExpression (123)
    on left: 102, on right: 95 106
ShortNewExpression (124)
    on left: 103, on right: 93 108
FullNewSubexpression (125)
    on left: 104 105 106, on right: 102 105 107
ShortNewSubexpression (126)
    on left: 107 108, on right: 103
MemberOperator (127)
    on left: 109 110 111, on right: 96 105
Arguments (128)
    on left: 112, on right: 97 102
ArgumentList (129)
    on left: 113 114, on right: 109 112
ArgumentListPrefix (130)
    on left: 115 116, on right: 114 116
PrimaryExpression (131)
    on left: 117 118 119, on right: 94 104
SimpleExpression (132)
    on left: 120 121 122 123 124 125 126 127 128, on right: 117
FunctionExpression (133)
    on left: 129 130, on right: 118
AnonymousFunction (134)
    on left: 131, on right: 129
NamedFunction (135)
    on left: 132, on right: 57 130
QualifiedIdentifier (136)
    on left: 133, on right: 110 126 138
ObjectLiteral (137)
    on left: 134 135, on right: 119
FieldList (138)
    on left: 136 137, on right: 135 137
LiteralField (139)
    on left: 138, on right: 136 137
ArrayLiteral (140)
    on left: 139 140, on right: 128
ElementList (141)
    on left: 141 142, on right: 140 142
LiteralElement (142)
    on left: 143, on right: 141 142
LogicalOrExpression (143)
    on left: 144 145, on right: 88 89 90 91 145
LogicalAndExpression (144)
    on left: 146 147, on right: 144 145 147
BitwiseOrExpression (145)
    on left: 148 149, on right: 146 147 149
BitwiseXorExpression (146)
    on left: 150 151, on right: 148 149 151
BitwiseAndExpression (147)
    on left: 152 153, on right: 150 151 153
EqualityExpression (148)
    on left: 154 155 156 157 158, on right: 152 153 155 156 157 158
RelationalExpression (149)
    on left: 159 160 161 162 163 164, on right: 154 155 156 157 158
    160 161 162 163 164
ShiftExpression (150)
    on left: 165 166 167 168, on right: 159 160 161 162 163 164 166
    167 168
AdditiveExpression (151)
    on left: 169 170 171, on right: 165 166 167 168 170 171
MultiplicativeExpression (152)
    on left: 172 173 174 175, on right: 169 170 171 173 174 175
UnaryExpression (153)
    on left: 176 177 178 179 180 181 182, on right: 172 173 174 175
    179 180 181 182


State 0

    0 $accept: . Program "end of file"

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONST         shift, and go to state 18
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    VAR           shift, and go to state 27
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    Program                   go to state 30
    Statements                go to state 31
    Statement                 go to state 32
    CodeStatement             go to state 33
    Definition                go to state 34
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    VariableDefinition        go to state 46
    VariableDefinitionKind    go to state 47
    FunctionDefinition        go to state 48
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 62
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 1

  120 SimpleExpression: NULL_V .

    $default  reduce using rule 120 (SimpleExpression)


State 2

  121 SimpleExpression: TRUE_V .

    $default  reduce using rule 121 (SimpleExpression)


State 3

  122 SimpleExpression: FALSE_V .

    $default  reduce using rule 122 (SimpleExpression)


State 4

  124 SimpleExpression: FLT_V .

    $default  reduce using rule 124 (SimpleExpression)


State 5

  123 SimpleExpression: INT_V .

    $default  reduce using rule 123 (SimpleExpression)


State 6

  125 SimpleExpression: STRING .

    $default  reduce using rule 125 (SimpleExpression)


State 7

  181 UnaryExpression: BIT_NOT_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 80


State 8

   21 Block: OPEN_C . Statements CLOSE_C
  134 ObjectLiteral: OPEN_C . CLOSE_C
  135              | OPEN_C . FieldList CLOSE_C

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    CLOSE_C       shift, and go to state 81
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONST         shift, and go to state 18
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    VAR           shift, and go to state 27
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    Statements                go to state 82
    Statement                 go to state 32
    CodeStatement             go to state 33
    Definition                go to state 34
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    VariableDefinition        go to state 46
    VariableDefinitionKind    go to state 47
    FunctionDefinition        go to state 48
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 62
    QualifiedIdentifier       go to state 83
    ObjectLiteral             go to state 64
    FieldList                 go to state 84
    LiteralField              go to state 85
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 9

  139 ArrayLiteral: OPEN_B . CLOSE_B
  140             | OPEN_B . ElementList CLOSE_B

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    CLOSE_B       shift, and go to state 86
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 87
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ElementList               go to state 88
    LiteralElement            go to state 89
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 10

   85 ParenthesizedExpression: OPEN_P . Expression CLOSE_P

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    Expression                go to state 90
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 11

   19 EmptyStatement: STMT_TER_OP .

    $default  reduce using rule 19 (EmptyStatement)


State 12

  178 UnaryExpression: UNIT_SUB_OP . PostfixExpression

    NULL_V    shift, and go to state 1
    TRUE_V    shift, and go to state 2
    FALSE_V   shift, and go to state 3
    FLT_V     shift, and go to state 4
    INT_V     shift, and go to state 5
    STRING    shift, and go to state 6
    OPEN_C    shift, and go to state 77
    OPEN_B    shift, and go to state 9
    OPEN_P    shift, and go to state 10
    FUNCTION  shift, and go to state 22
    NEW       shift, and go to state 24
    ID        shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 91
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65


State 13

  180 UnaryExpression: SUB_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 92


State 14

  177 UnaryExpression: UNIT_ADD_OP . PostfixExpression

    NULL_V    shift, and go to state 1
    TRUE_V    shift, and go to state 2
    FALSE_V   shift, and go to state 3
    FLT_V     shift, and go to state 4
    INT_V     shift, and go to state 5
    STRING    shift, and go to state 6
    OPEN_C    shift, and go to state 77
    OPEN_B    shift, and go to state 9
    OPEN_P    shift, and go to state 10
    FUNCTION  shift, and go to state 22
    NEW       shift, and go to state 24
    ID        shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 93
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65


State 15

  179 UnaryExpression: ADD_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 94


State 16

  182 UnaryExpression: LOGIC_NOT_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 95


State 17

   43 BreakStatement: BREAK . OptionalLabel

    ID  shift, and go to state 29

    $default  reduce using rule 44 (OptionalLabel)

    OptionalLabel  go to state 96
    Identifier     go to state 97


State 18

   49 VariableDefinitionKind: CONST .

    $default  reduce using rule 49 (VariableDefinitionKind)


State 19

   42 ContinueStatement: CONTINUE . OptionalLabel

    ID  shift, and go to state 29

    $default  reduce using rule 44 (OptionalLabel)

    OptionalLabel  go to state 98
    Identifier     go to state 97


State 20

   36 DoStatement: DO . CodeStatement WHILE ParenthesizedExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 99
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 21

   38 ForStatement: FOR . OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

    OPEN_P  shift, and go to state 100


State 22

  131 AnonymousFunction: FUNCTION . FunctionSignature Block
  132 NamedFunction: FUNCTION . Identifier FunctionSignature Block

    OPEN_P  shift, and go to state 101
    ID      shift, and go to state 29

    FunctionSignature   go to state 102
    ParameterSignature  go to state 103
    Identifier          go to state 104


State 23

   22 IfStatement: IF . ParenthesizedExpression CodeStatement
   23            | IF . ParenthesizedExpression CodeStatement ELSE CodeStatement

    OPEN_P  shift, and go to state 10

    ParenthesizedExpression  go to state 105


State 24

  102 FullNewExpression: NEW . FullNewSubexpression Arguments
  103 ShortNewExpression: NEW . ShortNewSubexpression

    NULL_V    shift, and go to state 1
    TRUE_V    shift, and go to state 2
    FALSE_V   shift, and go to state 3
    FLT_V     shift, and go to state 4
    INT_V     shift, and go to state 5
    STRING    shift, and go to state 6
    OPEN_C    shift, and go to state 77
    OPEN_B    shift, and go to state 9
    OPEN_P    shift, and go to state 10
    FUNCTION  shift, and go to state 22
    NEW       shift, and go to state 24
    ID        shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    FullNewExpression        go to state 106
    ShortNewExpression       go to state 107
    FullNewSubexpression     go to state 108
    ShortNewSubexpression    go to state 109
    PrimaryExpression        go to state 110
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65


State 25

   46 ReturnStatement: RETURN . OptionalExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 70 (OptionalExpression)

    Expression                go to state 111
    OptionalExpression        go to state 112
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 26

   24 SwitchStatement: SWITCH . ParenthesizedExpression OPEN_C CLOSE_C
   25                | SWITCH . ParenthesizedExpression OPEN_C CaseGroups LastCaseGroup CLOSE_C

    OPEN_P  shift, and go to state 10

    ParenthesizedExpression  go to state 113


State 27

   48 VariableDefinitionKind: VAR .

    $default  reduce using rule 48 (VariableDefinitionKind)


State 28

   37 WhileStatement: WHILE . ParenthesizedExpression CodeStatement

    OPEN_P  shift, and go to state 10

    ParenthesizedExpression  go to state 114


State 29

   86 Identifier: ID .

    $default  reduce using rule 86 (Identifier)


State 30

    0 $accept: Program . "end of file"

    "end of file"  shift, and go to state 115


State 31

    1 Program: Statements .
    2 Statements: Statements . Statement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONST         shift, and go to state 18
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    VAR           shift, and go to state 27
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    $default  reduce using rule 1 (Program)

    Statement                 go to state 116
    CodeStatement             go to state 33
    Definition                go to state 34
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    VariableDefinition        go to state 46
    VariableDefinitionKind    go to state 47
    FunctionDefinition        go to state 48
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 62
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 32

    3 Statements: Statement .

    $default  reduce using rule 3 (Statements)


State 33

    4 Statement: CodeStatement .

    $default  reduce using rule 4 (Statement)


State 34

    5 Statement: Definition .

    $default  reduce using rule 5 (Statement)


State 35

    6 CodeStatement: EmptyStatement .

    $default  reduce using rule 6 (CodeStatement)


State 36

    7 CodeStatement: ExpressionStatement . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 117


State 37

    8 CodeStatement: Block .

    $default  reduce using rule 8 (CodeStatement)


State 38

    9 CodeStatement: IfStatement .

    $default  reduce using rule 9 (CodeStatement)


State 39

   10 CodeStatement: SwitchStatement .

    $default  reduce using rule 10 (CodeStatement)


State 40

   11 CodeStatement: DoStatement . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 118


State 41

   12 CodeStatement: WhileStatement .

    $default  reduce using rule 12 (CodeStatement)


State 42

   13 CodeStatement: ForStatement .

    $default  reduce using rule 13 (CodeStatement)


State 43

   14 CodeStatement: ContinueStatement . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 119


State 44

   15 CodeStatement: BreakStatement . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 120


State 45

   16 CodeStatement: ReturnStatement . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 121


State 46

   17 Definition: VariableDefinition . STMT_TER_OP

    STMT_TER_OP  shift, and go to state 122


State 47

   47 VariableDefinition: VariableDefinitionKind . VariableBindingList

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    VariableBindingList       go to state 123
    VariableBinding           go to state 124
    TypedIdentifier           go to state 125
    ParenthesizedExpression   go to state 51
    Identifier                go to state 126
    TypeExpression            go to state 127
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 48

   18 Definition: FunctionDefinition .

    $default  reduce using rule 18 (Definition)


State 49

   20 ExpressionStatement: Expression .
   68 Expression: Expression . SEP_OP AssignmentExpression

    SEP_OP  shift, and go to state 130

    $default  reduce using rule 20 (ExpressionStatement)


State 50

   67 Expression: AssignmentExpression .

    $default  reduce using rule 67 (Expression)


State 51

  127 SimpleExpression: ParenthesizedExpression .

    $default  reduce using rule 127 (SimpleExpression)


State 52

  133 QualifiedIdentifier: Identifier .

    $default  reduce using rule 133 (QualifiedIdentifier)


State 53

   71 AssignmentExpression: ConditionalExpression .

    $default  reduce using rule 71 (AssignmentExpression)


State 54

   72 AssignmentExpression: PostfixExpression . VA_OP AssignmentExpression
   73                     | PostfixExpression . CompoundAssignment AssignmentExpression
   98 FullPostfixExpression: PostfixExpression . UNIT_ADD_OP
   99                      | PostfixExpression . UNIT_SUB_OP
  100                      | PostfixExpression . LOGIC_NOT_OP
  101                      | PostfixExpression . BIT_NOT_OP
  176 UnaryExpression: PostfixExpression .

    BIT_NOT_OP              shift, and go to state 131
    SHORT_BIT_OR_OP         shift, and go to state 132
    SHORT_BIT_XOR_OP        shift, and go to state 133
    SHORT_BIT_SHIFT_Z_R_OP  shift, and go to state 134
    SHORT_BIT_SHIFT_S_R_OP  shift, and go to state 135
    VA_OP                   shift, and go to state 136
    SHORT_BIT_SHIFT_L_OP    shift, and go to state 137
    SHORT_DIV_OP            shift, and go to state 138
    SHORT_SUB_OP            shift, and go to state 139
    UNIT_SUB_OP             shift, and go to state 140
    SHORT_ADD_OP            shift, and go to state 141
    UNIT_ADD_OP             shift, and go to state 142
    SHORT_MUL_OP            shift, and go to state 143
    SHORT_BIT_AND_OP        shift, and go to state 144
    SHORT_MOD_OP            shift, and go to state 145
    LOGIC_NOT_OP            shift, and go to state 146

    $default  reduce using rule 176 (UnaryExpression)

    CompoundAssignment  go to state 147


State 55

   92 PostfixExpression: FullPostfixExpression .
   96 FullPostfixExpression: FullPostfixExpression . MemberOperator
   97                      | FullPostfixExpression . Arguments

    OPEN_B      shift, and go to state 148
    OPEN_P      shift, and go to state 149
    MEM_ACC_OP  shift, and go to state 150

    $default  reduce using rule 92 (PostfixExpression)

    MemberOperator  go to state 151
    Arguments       go to state 152


State 56

   95 FullPostfixExpression: FullNewExpression .

    $default  reduce using rule 95 (FullPostfixExpression)


State 57

   93 PostfixExpression: ShortNewExpression .

    $default  reduce using rule 93 (PostfixExpression)


State 58

   94 FullPostfixExpression: PrimaryExpression .

    $default  reduce using rule 94 (FullPostfixExpression)


State 59

  117 PrimaryExpression: SimpleExpression .

    $default  reduce using rule 117 (PrimaryExpression)


State 60

  118 PrimaryExpression: FunctionExpression .

    $default  reduce using rule 118 (PrimaryExpression)


State 61

  129 FunctionExpression: AnonymousFunction .

    $default  reduce using rule 129 (FunctionExpression)


State 62

   57 FunctionDefinition: NamedFunction .
  130 FunctionExpression: NamedFunction .

    "end of file"  reduce using rule 57 (FunctionDefinition)
    NULL_V         reduce using rule 57 (FunctionDefinition)
    TRUE_V         reduce using rule 57 (FunctionDefinition)
    FALSE_V        reduce using rule 57 (FunctionDefinition)
    FLT_V          reduce using rule 57 (FunctionDefinition)
    INT_V          reduce using rule 57 (FunctionDefinition)
    STRING         reduce using rule 57 (FunctionDefinition)
    BIT_NOT_OP     reduce using rule 57 (FunctionDefinition)
    BIT_NOT_OP     [reduce using rule 130 (FunctionExpression)]
    CLOSE_C        reduce using rule 57 (FunctionDefinition)
    OPEN_C         reduce using rule 57 (FunctionDefinition)
    OPEN_B         reduce using rule 57 (FunctionDefinition)
    OPEN_B         [reduce using rule 130 (FunctionExpression)]
    OPEN_P         reduce using rule 57 (FunctionDefinition)
    OPEN_P         [reduce using rule 130 (FunctionExpression)]
    STMT_TER_OP    reduce using rule 57 (FunctionDefinition)
    STMT_TER_OP    [reduce using rule 130 (FunctionExpression)]
    UNIT_SUB_OP    reduce using rule 57 (FunctionDefinition)
    UNIT_SUB_OP    [reduce using rule 130 (FunctionExpression)]
    SUB_OP         reduce using rule 57 (FunctionDefinition)
    SUB_OP         [reduce using rule 130 (FunctionExpression)]
    UNIT_ADD_OP    reduce using rule 57 (FunctionDefinition)
    UNIT_ADD_OP    [reduce using rule 130 (FunctionExpression)]
    ADD_OP         reduce using rule 57 (FunctionDefinition)
    ADD_OP         [reduce using rule 130 (FunctionExpression)]
    LOGIC_NOT_OP   reduce using rule 57 (FunctionDefinition)
    LOGIC_NOT_OP   [reduce using rule 130 (FunctionExpression)]
    BREAK          reduce using rule 57 (FunctionDefinition)
    CONST          reduce using rule 57 (FunctionDefinition)
    CONTINUE       reduce using rule 57 (FunctionDefinition)
    DO             reduce using rule 57 (FunctionDefinition)
    FOR            reduce using rule 57 (FunctionDefinition)
    FUNCTION       reduce using rule 57 (FunctionDefinition)
    IF             reduce using rule 57 (FunctionDefinition)
    NEW            reduce using rule 57 (FunctionDefinition)
    RETURN         reduce using rule 57 (FunctionDefinition)
    SWITCH         reduce using rule 57 (FunctionDefinition)
    VAR            reduce using rule 57 (FunctionDefinition)
    WHILE          reduce using rule 57 (FunctionDefinition)
    ID             reduce using rule 57 (FunctionDefinition)
    $default       reduce using rule 130 (FunctionExpression)


State 63

  126 SimpleExpression: QualifiedIdentifier .

    $default  reduce using rule 126 (SimpleExpression)


State 64

  119 PrimaryExpression: ObjectLiteral .

    $default  reduce using rule 119 (PrimaryExpression)


State 65

  128 SimpleExpression: ArrayLiteral .

    $default  reduce using rule 128 (SimpleExpression)


State 66

   88 ConditionalExpression: LogicalOrExpression .
   89                      | LogicalOrExpression . TERNARY_OP AssignmentExpression PA_OP AssignmentExpression
  145 LogicalOrExpression: LogicalOrExpression . LOGIC_OR_OP LogicalAndExpression

    TERNARY_OP   shift, and go to state 153
    LOGIC_OR_OP  shift, and go to state 154

    $default  reduce using rule 88 (ConditionalExpression)


State 67

  144 LogicalOrExpression: LogicalAndExpression .
  147 LogicalAndExpression: LogicalAndExpression . LOGIC_AND_OP BitwiseOrExpression

    LOGIC_AND_OP  shift, and go to state 155

    $default  reduce using rule 144 (LogicalOrExpression)


State 68

  146 LogicalAndExpression: BitwiseOrExpression .
  149 BitwiseOrExpression: BitwiseOrExpression . BIT_OR_OP BitwiseXorExpression

    BIT_OR_OP  shift, and go to state 156

    $default  reduce using rule 146 (LogicalAndExpression)


State 69

  148 BitwiseOrExpression: BitwiseXorExpression .
  151 BitwiseXorExpression: BitwiseXorExpression . BIT_XOR_OP BitwiseAndExpression

    BIT_XOR_OP  shift, and go to state 157

    $default  reduce using rule 148 (BitwiseOrExpression)


State 70

  150 BitwiseXorExpression: BitwiseAndExpression .
  153 BitwiseAndExpression: BitwiseAndExpression . BIT_AND_OP EqualityExpression

    BIT_AND_OP  shift, and go to state 158

    $default  reduce using rule 150 (BitwiseXorExpression)


State 71

  152 BitwiseAndExpression: EqualityExpression .
  155 EqualityExpression: EqualityExpression . EQ_V_OP RelationalExpression
  156                   | EqualityExpression . NEG_V_OP RelationalExpression
  157                   | EqualityExpression . EQ_VT_OP RelationalExpression
  158                   | EqualityExpression . NEG_VT_OP RelationalExpression

    EQ_VT_OP   shift, and go to state 159
    EQ_V_OP    shift, and go to state 160
    NEG_VT_OP  shift, and go to state 161
    NEG_V_OP   shift, and go to state 162

    $default  reduce using rule 152 (BitwiseAndExpression)


State 72

  154 EqualityExpression: RelationalExpression .
  160 RelationalExpression: RelationalExpression . L_OP ShiftExpression
  161                     | RelationalExpression . G_OP ShiftExpression
  162                     | RelationalExpression . LE_OP ShiftExpression
  163                     | RelationalExpression . GE_OP ShiftExpression
  164                     | RelationalExpression . INSTANCEOF ShiftExpression

    GE_OP       shift, and go to state 163
    G_OP        shift, and go to state 164
    LE_OP       shift, and go to state 165
    L_OP        shift, and go to state 166
    INSTANCEOF  shift, and go to state 167

    $default  reduce using rule 154 (EqualityExpression)


State 73

  159 RelationalExpression: ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 159 (RelationalExpression)


State 74

  165 ShiftExpression: AdditiveExpression .
  170 AdditiveExpression: AdditiveExpression . ADD_OP MultiplicativeExpression
  171                   | AdditiveExpression . SUB_OP MultiplicativeExpression

    SUB_OP  shift, and go to state 171
    ADD_OP  shift, and go to state 172

    $default  reduce using rule 165 (ShiftExpression)


State 75

  169 AdditiveExpression: MultiplicativeExpression .
  173 MultiplicativeExpression: MultiplicativeExpression . MUL_OP UnaryExpression
  174                         | MultiplicativeExpression . DIV_OP UnaryExpression
  175                         | MultiplicativeExpression . MOD_OP UnaryExpression

    DIV_OP  shift, and go to state 173
    MUL_OP  shift, and go to state 174
    MOD_OP  shift, and go to state 175

    $default  reduce using rule 169 (AdditiveExpression)


State 76

  172 MultiplicativeExpression: UnaryExpression .

    $default  reduce using rule 172 (MultiplicativeExpression)


State 77

  134 ObjectLiteral: OPEN_C . CLOSE_C
  135              | OPEN_C . FieldList CLOSE_C

    CLOSE_C  shift, and go to state 81
    ID       shift, and go to state 29

    Identifier           go to state 52
    QualifiedIdentifier  go to state 176
    FieldList            go to state 84
    LiteralField         go to state 85


State 78

   98 FullPostfixExpression: PostfixExpression . UNIT_ADD_OP
   99                      | PostfixExpression . UNIT_SUB_OP
  100                      | PostfixExpression . LOGIC_NOT_OP
  101                      | PostfixExpression . BIT_NOT_OP
  176 UnaryExpression: PostfixExpression .

    BIT_NOT_OP    shift, and go to state 131
    UNIT_SUB_OP   shift, and go to state 140
    UNIT_ADD_OP   shift, and go to state 142
    LOGIC_NOT_OP  shift, and go to state 146

    $default  reduce using rule 176 (UnaryExpression)


State 79

  130 FunctionExpression: NamedFunction .

    $default  reduce using rule 130 (FunctionExpression)


State 80

  181 UnaryExpression: BIT_NOT_OP UnaryExpression .

    $default  reduce using rule 181 (UnaryExpression)


State 81

  134 ObjectLiteral: OPEN_C CLOSE_C .

    $default  reduce using rule 134 (ObjectLiteral)


State 82

    2 Statements: Statements . Statement
   21 Block: OPEN_C Statements . CLOSE_C

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    CLOSE_C       shift, and go to state 177
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONST         shift, and go to state 18
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    VAR           shift, and go to state 27
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    Statement                 go to state 116
    CodeStatement             go to state 33
    Definition                go to state 34
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    VariableDefinition        go to state 46
    VariableDefinitionKind    go to state 47
    FunctionDefinition        go to state 48
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 62
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 83

  126 SimpleExpression: QualifiedIdentifier .
  138 LiteralField: QualifiedIdentifier . PA_OP AssignmentExpression

    PA_OP  shift, and go to state 178

    $default  reduce using rule 126 (SimpleExpression)


State 84

  135 ObjectLiteral: OPEN_C FieldList . CLOSE_C
  137 FieldList: FieldList . SEP_OP LiteralField

    CLOSE_C  shift, and go to state 179
    SEP_OP   shift, and go to state 180


State 85

  136 FieldList: LiteralField .

    $default  reduce using rule 136 (FieldList)


State 86

  139 ArrayLiteral: OPEN_B CLOSE_B .

    $default  reduce using rule 139 (ArrayLiteral)


State 87

  143 LiteralElement: AssignmentExpression .

    $default  reduce using rule 143 (LiteralElement)


State 88

  140 ArrayLiteral: OPEN_B ElementList . CLOSE_B
  142 ElementList: ElementList . SEP_OP LiteralElement

    CLOSE_B  shift, and go to state 181
    SEP_OP   shift, and go to state 182


State 89

  141 ElementList: LiteralElement .

    $default  reduce using rule 141 (ElementList)


State 90

   68 Expression: Expression . SEP_OP AssignmentExpression
   85 ParenthesizedExpression: OPEN_P Expression . CLOSE_P

    CLOSE_P  shift, and go to state 183
    SEP_OP   shift, and go to state 130


State 91

   98 FullPostfixExpression: PostfixExpression . UNIT_ADD_OP
   99                      | PostfixExpression . UNIT_SUB_OP
  100                      | PostfixExpression . LOGIC_NOT_OP
  101                      | PostfixExpression . BIT_NOT_OP
  178 UnaryExpression: UNIT_SUB_OP PostfixExpression .

    BIT_NOT_OP    shift, and go to state 131
    UNIT_SUB_OP   shift, and go to state 140
    UNIT_ADD_OP   shift, and go to state 142
    LOGIC_NOT_OP  shift, and go to state 146

    $default  reduce using rule 178 (UnaryExpression)


State 92

  180 UnaryExpression: SUB_OP UnaryExpression .

    $default  reduce using rule 180 (UnaryExpression)


State 93

   98 FullPostfixExpression: PostfixExpression . UNIT_ADD_OP
   99                      | PostfixExpression . UNIT_SUB_OP
  100                      | PostfixExpression . LOGIC_NOT_OP
  101                      | PostfixExpression . BIT_NOT_OP
  177 UnaryExpression: UNIT_ADD_OP PostfixExpression .

    BIT_NOT_OP    shift, and go to state 131
    UNIT_SUB_OP   shift, and go to state 140
    UNIT_ADD_OP   shift, and go to state 142
    LOGIC_NOT_OP  shift, and go to state 146

    $default  reduce using rule 177 (UnaryExpression)


State 94

  179 UnaryExpression: ADD_OP UnaryExpression .

    $default  reduce using rule 179 (UnaryExpression)


State 95

  182 UnaryExpression: LOGIC_NOT_OP UnaryExpression .

    $default  reduce using rule 182 (UnaryExpression)


State 96

   43 BreakStatement: BREAK OptionalLabel .

    $default  reduce using rule 43 (BreakStatement)


State 97

   45 OptionalLabel: Identifier .

    $default  reduce using rule 45 (OptionalLabel)


State 98

   42 ContinueStatement: CONTINUE OptionalLabel .

    $default  reduce using rule 42 (ContinueStatement)


State 99

   36 DoStatement: DO CodeStatement . WHILE ParenthesizedExpression

    WHILE  shift, and go to state 184


State 100

   38 ForStatement: FOR OPEN_P . ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    CONST         shift, and go to state 18
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    VAR           shift, and go to state 27
    ID            shift, and go to state 29

    $default  reduce using rule 39 (ForInitializer)

    ForInitializer            go to state 185
    VariableDefinitionKind    go to state 186
    Expression                go to state 187
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 101

   59 ParameterSignature: OPEN_P . Parameters CLOSE_P

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 60 (Parameters)

    TypedIdentifier           go to state 188
    Parameters                go to state 189
    RequiredParameters        go to state 190
    RequiredParameter         go to state 191
    ParenthesizedExpression   go to state 51
    Identifier                go to state 126
    TypeExpression            go to state 127
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 102

  131 AnonymousFunction: FUNCTION FunctionSignature . Block

    OPEN_C  shift, and go to state 192

    Block  go to state 193


State 103

   58 FunctionSignature: ParameterSignature . ResultSignature

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    OPEN_C  [reduce using rule 65 (ResultSignature)]

    ResultSignature           go to state 194
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    TypeExpression            go to state 195
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 104

  132 NamedFunction: FUNCTION Identifier . FunctionSignature Block

    OPEN_P  shift, and go to state 101

    FunctionSignature   go to state 196
    ParameterSignature  go to state 103


State 105

   22 IfStatement: IF ParenthesizedExpression . CodeStatement
   23            | IF ParenthesizedExpression . CodeStatement ELSE CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 197
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 106

  106 FullNewSubexpression: FullNewExpression .

    $default  reduce using rule 106 (FullNewSubexpression)


State 107

  108 ShortNewSubexpression: ShortNewExpression .

    $default  reduce using rule 108 (ShortNewSubexpression)


State 108

  102 FullNewExpression: NEW FullNewSubexpression . Arguments
  105 FullNewSubexpression: FullNewSubexpression . MemberOperator
  107 ShortNewSubexpression: FullNewSubexpression .

    OPEN_B      shift, and go to state 148
    OPEN_P      shift, and go to state 149
    MEM_ACC_OP  shift, and go to state 150

    $default  reduce using rule 107 (ShortNewSubexpression)

    MemberOperator  go to state 198
    Arguments       go to state 199


State 109

  103 ShortNewExpression: NEW ShortNewSubexpression .

    $default  reduce using rule 103 (ShortNewExpression)


State 110

  104 FullNewSubexpression: PrimaryExpression .

    $default  reduce using rule 104 (FullNewSubexpression)


State 111

   68 Expression: Expression . SEP_OP AssignmentExpression
   69 OptionalExpression: Expression .

    SEP_OP  shift, and go to state 130

    $default  reduce using rule 69 (OptionalExpression)


State 112

   46 ReturnStatement: RETURN OptionalExpression .

    $default  reduce using rule 46 (ReturnStatement)


State 113

   24 SwitchStatement: SWITCH ParenthesizedExpression . OPEN_C CLOSE_C
   25                | SWITCH ParenthesizedExpression . OPEN_C CaseGroups LastCaseGroup CLOSE_C

    OPEN_C  shift, and go to state 200


State 114

   37 WhileStatement: WHILE ParenthesizedExpression . CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 201
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 115

    0 $accept: Program "end of file" .

    $default  accept


State 116

    2 Statements: Statements Statement .

    $default  reduce using rule 2 (Statements)


State 117

    7 CodeStatement: ExpressionStatement STMT_TER_OP .

    $default  reduce using rule 7 (CodeStatement)


State 118

   11 CodeStatement: DoStatement STMT_TER_OP .

    $default  reduce using rule 11 (CodeStatement)


State 119

   14 CodeStatement: ContinueStatement STMT_TER_OP .

    $default  reduce using rule 14 (CodeStatement)


State 120

   15 CodeStatement: BreakStatement STMT_TER_OP .

    $default  reduce using rule 15 (CodeStatement)


State 121

   16 CodeStatement: ReturnStatement STMT_TER_OP .

    $default  reduce using rule 16 (CodeStatement)


State 122

   17 Definition: VariableDefinition STMT_TER_OP .

    $default  reduce using rule 17 (Definition)


State 123

   47 VariableDefinition: VariableDefinitionKind VariableBindingList .
   51 VariableBindingList: VariableBindingList . SEP_OP VariableBinding

    SEP_OP  shift, and go to state 202

    $default  reduce using rule 47 (VariableDefinition)


State 124

   50 VariableBindingList: VariableBinding .

    $default  reduce using rule 50 (VariableBindingList)


State 125

   52 VariableBinding: TypedIdentifier . VariableInitializer

    VA_OP  shift, and go to state 203

    $default  reduce using rule 55 (VariableInitializer)

    VariableInitializer  go to state 204


State 126

   53 TypedIdentifier: Identifier .
  133 QualifiedIdentifier: Identifier .

    CLOSE_P      reduce using rule 53 (TypedIdentifier)
    VA_OP        reduce using rule 53 (TypedIdentifier)
    STMT_TER_OP  reduce using rule 53 (TypedIdentifier)
    SEP_OP       reduce using rule 53 (TypedIdentifier)
    $default     reduce using rule 133 (QualifiedIdentifier)


State 127

   54 TypedIdentifier: TypeExpression . Identifier

    ID  shift, and go to state 29

    Identifier  go to state 205


State 128

   87 TypeExpression: NonAssignmentExpression .

    $default  reduce using rule 87 (TypeExpression)


State 129

   90 NonAssignmentExpression: LogicalOrExpression .
   91                        | LogicalOrExpression . TERNARY_OP NonAssignmentExpression PA_OP NonAssignmentExpression
  145 LogicalOrExpression: LogicalOrExpression . LOGIC_OR_OP LogicalAndExpression

    TERNARY_OP   shift, and go to state 206
    LOGIC_OR_OP  shift, and go to state 154

    $default  reduce using rule 90 (NonAssignmentExpression)


State 130

   68 Expression: Expression SEP_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 207
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 131

  101 FullPostfixExpression: PostfixExpression BIT_NOT_OP .

    $default  reduce using rule 101 (FullPostfixExpression)


State 132

   84 CompoundAssignment: SHORT_BIT_OR_OP .

    $default  reduce using rule 84 (CompoundAssignment)


State 133

   83 CompoundAssignment: SHORT_BIT_XOR_OP .

    $default  reduce using rule 83 (CompoundAssignment)


State 134

   81 CompoundAssignment: SHORT_BIT_SHIFT_Z_R_OP .

    $default  reduce using rule 81 (CompoundAssignment)


State 135

   80 CompoundAssignment: SHORT_BIT_SHIFT_S_R_OP .

    $default  reduce using rule 80 (CompoundAssignment)


State 136

   72 AssignmentExpression: PostfixExpression VA_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 208
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 137

   79 CompoundAssignment: SHORT_BIT_SHIFT_L_OP .

    $default  reduce using rule 79 (CompoundAssignment)


State 138

   75 CompoundAssignment: SHORT_DIV_OP .

    $default  reduce using rule 75 (CompoundAssignment)


State 139

   78 CompoundAssignment: SHORT_SUB_OP .

    $default  reduce using rule 78 (CompoundAssignment)


State 140

   99 FullPostfixExpression: PostfixExpression UNIT_SUB_OP .

    $default  reduce using rule 99 (FullPostfixExpression)


State 141

   77 CompoundAssignment: SHORT_ADD_OP .

    $default  reduce using rule 77 (CompoundAssignment)


State 142

   98 FullPostfixExpression: PostfixExpression UNIT_ADD_OP .

    $default  reduce using rule 98 (FullPostfixExpression)


State 143

   74 CompoundAssignment: SHORT_MUL_OP .

    $default  reduce using rule 74 (CompoundAssignment)


State 144

   82 CompoundAssignment: SHORT_BIT_AND_OP .

    $default  reduce using rule 82 (CompoundAssignment)


State 145

   76 CompoundAssignment: SHORT_MOD_OP .

    $default  reduce using rule 76 (CompoundAssignment)


State 146

  100 FullPostfixExpression: PostfixExpression LOGIC_NOT_OP .

    $default  reduce using rule 100 (FullPostfixExpression)


State 147

   73 AssignmentExpression: PostfixExpression CompoundAssignment . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 209
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 148

  109 MemberOperator: OPEN_B . ArgumentList CLOSE_B

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 113 (ArgumentList)

    AssignmentExpression      go to state 210
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    ArgumentList              go to state 211
    ArgumentListPrefix        go to state 212
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 149

  112 Arguments: OPEN_P . ArgumentList CLOSE_P

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 113 (ArgumentList)

    AssignmentExpression      go to state 210
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    ArgumentList              go to state 213
    ArgumentListPrefix        go to state 212
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 150

  110 MemberOperator: MEM_ACC_OP . QualifiedIdentifier
  111               | MEM_ACC_OP . ParenthesizedExpression

    OPEN_P  shift, and go to state 10
    ID      shift, and go to state 29

    ParenthesizedExpression  go to state 214
    Identifier               go to state 52
    QualifiedIdentifier      go to state 215


State 151

   96 FullPostfixExpression: FullPostfixExpression MemberOperator .

    $default  reduce using rule 96 (FullPostfixExpression)


State 152

   97 FullPostfixExpression: FullPostfixExpression Arguments .

    $default  reduce using rule 97 (FullPostfixExpression)


State 153

   89 ConditionalExpression: LogicalOrExpression TERNARY_OP . AssignmentExpression PA_OP AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 216
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 154

  145 LogicalOrExpression: LogicalOrExpression LOGIC_OR_OP . LogicalAndExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalAndExpression      go to state 217
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 155

  147 LogicalAndExpression: LogicalAndExpression LOGIC_AND_OP . BitwiseOrExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    BitwiseOrExpression       go to state 218
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 156

  149 BitwiseOrExpression: BitwiseOrExpression BIT_OR_OP . BitwiseXorExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    BitwiseXorExpression      go to state 219
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 157

  151 BitwiseXorExpression: BitwiseXorExpression BIT_XOR_OP . BitwiseAndExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    BitwiseAndExpression      go to state 220
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 158

  153 BitwiseAndExpression: BitwiseAndExpression BIT_AND_OP . EqualityExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    EqualityExpression        go to state 221
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 159

  157 EqualityExpression: EqualityExpression EQ_VT_OP . RelationalExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    RelationalExpression      go to state 222
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 160

  155 EqualityExpression: EqualityExpression EQ_V_OP . RelationalExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    RelationalExpression      go to state 223
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 161

  158 EqualityExpression: EqualityExpression NEG_VT_OP . RelationalExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    RelationalExpression      go to state 224
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 162

  156 EqualityExpression: EqualityExpression NEG_V_OP . RelationalExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    RelationalExpression      go to state 225
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 163

  163 RelationalExpression: RelationalExpression GE_OP . ShiftExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ShiftExpression           go to state 226
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 164

  161 RelationalExpression: RelationalExpression G_OP . ShiftExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ShiftExpression           go to state 227
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 165

  162 RelationalExpression: RelationalExpression LE_OP . ShiftExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ShiftExpression           go to state 228
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 166

  160 RelationalExpression: RelationalExpression L_OP . ShiftExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ShiftExpression           go to state 229
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 167

  164 RelationalExpression: RelationalExpression INSTANCEOF . ShiftExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    ShiftExpression           go to state 230
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 168

  168 ShiftExpression: ShiftExpression BIT_SHIFT_Z_R_OP . AdditiveExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    AdditiveExpression        go to state 231
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 169

  167 ShiftExpression: ShiftExpression BIT_SHIFT_S_R_OP . AdditiveExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    AdditiveExpression        go to state 232
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 170

  166 ShiftExpression: ShiftExpression BIT_SHIFT_L_OP . AdditiveExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    AdditiveExpression        go to state 233
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 171

  171 AdditiveExpression: AdditiveExpression SUB_OP . MultiplicativeExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    MultiplicativeExpression  go to state 234
    UnaryExpression           go to state 76


State 172

  170 AdditiveExpression: AdditiveExpression ADD_OP . MultiplicativeExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    MultiplicativeExpression  go to state 235
    UnaryExpression           go to state 76


State 173

  174 MultiplicativeExpression: MultiplicativeExpression DIV_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 236


State 174

  173 MultiplicativeExpression: MultiplicativeExpression MUL_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 237


State 175

  175 MultiplicativeExpression: MultiplicativeExpression MOD_OP . UnaryExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression  go to state 51
    Identifier               go to state 52
    PostfixExpression        go to state 78
    FullPostfixExpression    go to state 55
    FullNewExpression        go to state 56
    ShortNewExpression       go to state 57
    PrimaryExpression        go to state 58
    SimpleExpression         go to state 59
    FunctionExpression       go to state 60
    AnonymousFunction        go to state 61
    NamedFunction            go to state 79
    QualifiedIdentifier      go to state 63
    ObjectLiteral            go to state 64
    ArrayLiteral             go to state 65
    UnaryExpression          go to state 238


State 176

  138 LiteralField: QualifiedIdentifier . PA_OP AssignmentExpression

    PA_OP  shift, and go to state 178


State 177

   21 Block: OPEN_C Statements CLOSE_C .

    $default  reduce using rule 21 (Block)


State 178

  138 LiteralField: QualifiedIdentifier PA_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 239
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 179

  135 ObjectLiteral: OPEN_C FieldList CLOSE_C .

    $default  reduce using rule 135 (ObjectLiteral)


State 180

  137 FieldList: FieldList SEP_OP . LiteralField

    ID  shift, and go to state 29

    Identifier           go to state 52
    QualifiedIdentifier  go to state 176
    LiteralField         go to state 240


State 181

  140 ArrayLiteral: OPEN_B ElementList CLOSE_B .

    $default  reduce using rule 140 (ArrayLiteral)


State 182

  142 ElementList: ElementList SEP_OP . LiteralElement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 87
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LiteralElement            go to state 241
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 183

   85 ParenthesizedExpression: OPEN_P Expression CLOSE_P .

    $default  reduce using rule 85 (ParenthesizedExpression)


State 184

   36 DoStatement: DO CodeStatement WHILE . ParenthesizedExpression

    OPEN_P  shift, and go to state 10

    ParenthesizedExpression  go to state 242


State 185

   38 ForStatement: FOR OPEN_P ForInitializer . STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

    STMT_TER_OP  shift, and go to state 243


State 186

   41 ForInitializer: VariableDefinitionKind . VariableBinding

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    VariableBinding           go to state 244
    TypedIdentifier           go to state 125
    ParenthesizedExpression   go to state 51
    Identifier                go to state 126
    TypeExpression            go to state 127
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 187

   40 ForInitializer: Expression .
   68 Expression: Expression . SEP_OP AssignmentExpression

    SEP_OP  shift, and go to state 130

    $default  reduce using rule 40 (ForInitializer)


State 188

   64 RequiredParameter: TypedIdentifier .

    $default  reduce using rule 64 (RequiredParameter)


State 189

   59 ParameterSignature: OPEN_P Parameters . CLOSE_P

    CLOSE_P  shift, and go to state 245


State 190

   61 Parameters: RequiredParameters .
   63 RequiredParameters: RequiredParameters . SEP_OP RequiredParameter

    SEP_OP  shift, and go to state 246

    $default  reduce using rule 61 (Parameters)


State 191

   62 RequiredParameters: RequiredParameter .

    $default  reduce using rule 62 (RequiredParameters)


State 192

   21 Block: OPEN_C . Statements CLOSE_C

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONST         shift, and go to state 18
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    VAR           shift, and go to state 27
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    Statements                go to state 82
    Statement                 go to state 32
    CodeStatement             go to state 33
    Definition                go to state 34
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    VariableDefinition        go to state 46
    VariableDefinitionKind    go to state 47
    FunctionDefinition        go to state 48
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 62
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 193

  131 AnonymousFunction: FUNCTION FunctionSignature Block .

    $default  reduce using rule 131 (AnonymousFunction)


State 194

   58 FunctionSignature: ParameterSignature ResultSignature .

    $default  reduce using rule 58 (FunctionSignature)


State 195

   66 ResultSignature: TypeExpression .

    $default  reduce using rule 66 (ResultSignature)


State 196

  132 NamedFunction: FUNCTION Identifier FunctionSignature . Block

    OPEN_C  shift, and go to state 192

    Block  go to state 247


State 197

   22 IfStatement: IF ParenthesizedExpression CodeStatement .
   23            | IF ParenthesizedExpression CodeStatement . ELSE CodeStatement

    ELSE  shift, and go to state 248

    ELSE      [reduce using rule 22 (IfStatement)]
    $default  reduce using rule 22 (IfStatement)


State 198

  105 FullNewSubexpression: FullNewSubexpression MemberOperator .

    $default  reduce using rule 105 (FullNewSubexpression)


State 199

  102 FullNewExpression: NEW FullNewSubexpression Arguments .

    $default  reduce using rule 102 (FullNewExpression)


State 200

   24 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C . CLOSE_C
   25                | SWITCH ParenthesizedExpression OPEN_C . CaseGroups LastCaseGroup CLOSE_C

    CLOSE_C  shift, and go to state 249

    $default  reduce using rule 26 (CaseGroups)

    CaseGroups  go to state 250


State 201

   37 WhileStatement: WHILE ParenthesizedExpression CodeStatement .

    $default  reduce using rule 37 (WhileStatement)


State 202

   51 VariableBindingList: VariableBindingList SEP_OP . VariableBinding

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    VariableBinding           go to state 251
    TypedIdentifier           go to state 125
    ParenthesizedExpression   go to state 51
    Identifier                go to state 126
    TypeExpression            go to state 127
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 203

   56 VariableInitializer: VA_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 252
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 204

   52 VariableBinding: TypedIdentifier VariableInitializer .

    $default  reduce using rule 52 (VariableBinding)


State 205

   54 TypedIdentifier: TypeExpression Identifier .

    $default  reduce using rule 54 (TypedIdentifier)


State 206

   91 NonAssignmentExpression: LogicalOrExpression TERNARY_OP . NonAssignmentExpression PA_OP NonAssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    NonAssignmentExpression   go to state 253
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 207

   68 Expression: Expression SEP_OP AssignmentExpression .

    $default  reduce using rule 68 (Expression)


State 208

   72 AssignmentExpression: PostfixExpression VA_OP AssignmentExpression .

    $default  reduce using rule 72 (AssignmentExpression)


State 209

   73 AssignmentExpression: PostfixExpression CompoundAssignment AssignmentExpression .

    $default  reduce using rule 73 (AssignmentExpression)


State 210

  115 ArgumentListPrefix: AssignmentExpression .

    $default  reduce using rule 115 (ArgumentListPrefix)


State 211

  109 MemberOperator: OPEN_B ArgumentList . CLOSE_B

    CLOSE_B  shift, and go to state 254


State 212

  114 ArgumentList: ArgumentListPrefix .
  116 ArgumentListPrefix: ArgumentListPrefix . SEP_OP AssignmentExpression

    SEP_OP  shift, and go to state 255

    $default  reduce using rule 114 (ArgumentList)


State 213

  112 Arguments: OPEN_P ArgumentList . CLOSE_P

    CLOSE_P  shift, and go to state 256


State 214

  111 MemberOperator: MEM_ACC_OP ParenthesizedExpression .

    $default  reduce using rule 111 (MemberOperator)


State 215

  110 MemberOperator: MEM_ACC_OP QualifiedIdentifier .

    $default  reduce using rule 110 (MemberOperator)


State 216

   89 ConditionalExpression: LogicalOrExpression TERNARY_OP AssignmentExpression . PA_OP AssignmentExpression

    PA_OP  shift, and go to state 257


State 217

  145 LogicalOrExpression: LogicalOrExpression LOGIC_OR_OP LogicalAndExpression .
  147 LogicalAndExpression: LogicalAndExpression . LOGIC_AND_OP BitwiseOrExpression

    LOGIC_AND_OP  shift, and go to state 155

    $default  reduce using rule 145 (LogicalOrExpression)


State 218

  147 LogicalAndExpression: LogicalAndExpression LOGIC_AND_OP BitwiseOrExpression .
  149 BitwiseOrExpression: BitwiseOrExpression . BIT_OR_OP BitwiseXorExpression

    BIT_OR_OP  shift, and go to state 156

    $default  reduce using rule 147 (LogicalAndExpression)


State 219

  149 BitwiseOrExpression: BitwiseOrExpression BIT_OR_OP BitwiseXorExpression .
  151 BitwiseXorExpression: BitwiseXorExpression . BIT_XOR_OP BitwiseAndExpression

    BIT_XOR_OP  shift, and go to state 157

    $default  reduce using rule 149 (BitwiseOrExpression)


State 220

  151 BitwiseXorExpression: BitwiseXorExpression BIT_XOR_OP BitwiseAndExpression .
  153 BitwiseAndExpression: BitwiseAndExpression . BIT_AND_OP EqualityExpression

    BIT_AND_OP  shift, and go to state 158

    $default  reduce using rule 151 (BitwiseXorExpression)


State 221

  153 BitwiseAndExpression: BitwiseAndExpression BIT_AND_OP EqualityExpression .
  155 EqualityExpression: EqualityExpression . EQ_V_OP RelationalExpression
  156                   | EqualityExpression . NEG_V_OP RelationalExpression
  157                   | EqualityExpression . EQ_VT_OP RelationalExpression
  158                   | EqualityExpression . NEG_VT_OP RelationalExpression

    EQ_VT_OP   shift, and go to state 159
    EQ_V_OP    shift, and go to state 160
    NEG_VT_OP  shift, and go to state 161
    NEG_V_OP   shift, and go to state 162

    $default  reduce using rule 153 (BitwiseAndExpression)


State 222

  157 EqualityExpression: EqualityExpression EQ_VT_OP RelationalExpression .
  160 RelationalExpression: RelationalExpression . L_OP ShiftExpression
  161                     | RelationalExpression . G_OP ShiftExpression
  162                     | RelationalExpression . LE_OP ShiftExpression
  163                     | RelationalExpression . GE_OP ShiftExpression
  164                     | RelationalExpression . INSTANCEOF ShiftExpression

    GE_OP       shift, and go to state 163
    G_OP        shift, and go to state 164
    LE_OP       shift, and go to state 165
    L_OP        shift, and go to state 166
    INSTANCEOF  shift, and go to state 167

    $default  reduce using rule 157 (EqualityExpression)


State 223

  155 EqualityExpression: EqualityExpression EQ_V_OP RelationalExpression .
  160 RelationalExpression: RelationalExpression . L_OP ShiftExpression
  161                     | RelationalExpression . G_OP ShiftExpression
  162                     | RelationalExpression . LE_OP ShiftExpression
  163                     | RelationalExpression . GE_OP ShiftExpression
  164                     | RelationalExpression . INSTANCEOF ShiftExpression

    GE_OP       shift, and go to state 163
    G_OP        shift, and go to state 164
    LE_OP       shift, and go to state 165
    L_OP        shift, and go to state 166
    INSTANCEOF  shift, and go to state 167

    $default  reduce using rule 155 (EqualityExpression)


State 224

  158 EqualityExpression: EqualityExpression NEG_VT_OP RelationalExpression .
  160 RelationalExpression: RelationalExpression . L_OP ShiftExpression
  161                     | RelationalExpression . G_OP ShiftExpression
  162                     | RelationalExpression . LE_OP ShiftExpression
  163                     | RelationalExpression . GE_OP ShiftExpression
  164                     | RelationalExpression . INSTANCEOF ShiftExpression

    GE_OP       shift, and go to state 163
    G_OP        shift, and go to state 164
    LE_OP       shift, and go to state 165
    L_OP        shift, and go to state 166
    INSTANCEOF  shift, and go to state 167

    $default  reduce using rule 158 (EqualityExpression)


State 225

  156 EqualityExpression: EqualityExpression NEG_V_OP RelationalExpression .
  160 RelationalExpression: RelationalExpression . L_OP ShiftExpression
  161                     | RelationalExpression . G_OP ShiftExpression
  162                     | RelationalExpression . LE_OP ShiftExpression
  163                     | RelationalExpression . GE_OP ShiftExpression
  164                     | RelationalExpression . INSTANCEOF ShiftExpression

    GE_OP       shift, and go to state 163
    G_OP        shift, and go to state 164
    LE_OP       shift, and go to state 165
    L_OP        shift, and go to state 166
    INSTANCEOF  shift, and go to state 167

    $default  reduce using rule 156 (EqualityExpression)


State 226

  163 RelationalExpression: RelationalExpression GE_OP ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 163 (RelationalExpression)


State 227

  161 RelationalExpression: RelationalExpression G_OP ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 161 (RelationalExpression)


State 228

  162 RelationalExpression: RelationalExpression LE_OP ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 162 (RelationalExpression)


State 229

  160 RelationalExpression: RelationalExpression L_OP ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 160 (RelationalExpression)


State 230

  164 RelationalExpression: RelationalExpression INSTANCEOF ShiftExpression .
  166 ShiftExpression: ShiftExpression . BIT_SHIFT_L_OP AdditiveExpression
  167                | ShiftExpression . BIT_SHIFT_S_R_OP AdditiveExpression
  168                | ShiftExpression . BIT_SHIFT_Z_R_OP AdditiveExpression

    BIT_SHIFT_Z_R_OP  shift, and go to state 168
    BIT_SHIFT_S_R_OP  shift, and go to state 169
    BIT_SHIFT_L_OP    shift, and go to state 170

    $default  reduce using rule 164 (RelationalExpression)


State 231

  168 ShiftExpression: ShiftExpression BIT_SHIFT_Z_R_OP AdditiveExpression .
  170 AdditiveExpression: AdditiveExpression . ADD_OP MultiplicativeExpression
  171                   | AdditiveExpression . SUB_OP MultiplicativeExpression

    SUB_OP  shift, and go to state 171
    ADD_OP  shift, and go to state 172

    $default  reduce using rule 168 (ShiftExpression)


State 232

  167 ShiftExpression: ShiftExpression BIT_SHIFT_S_R_OP AdditiveExpression .
  170 AdditiveExpression: AdditiveExpression . ADD_OP MultiplicativeExpression
  171                   | AdditiveExpression . SUB_OP MultiplicativeExpression

    SUB_OP  shift, and go to state 171
    ADD_OP  shift, and go to state 172

    $default  reduce using rule 167 (ShiftExpression)


State 233

  166 ShiftExpression: ShiftExpression BIT_SHIFT_L_OP AdditiveExpression .
  170 AdditiveExpression: AdditiveExpression . ADD_OP MultiplicativeExpression
  171                   | AdditiveExpression . SUB_OP MultiplicativeExpression

    SUB_OP  shift, and go to state 171
    ADD_OP  shift, and go to state 172

    $default  reduce using rule 166 (ShiftExpression)


State 234

  171 AdditiveExpression: AdditiveExpression SUB_OP MultiplicativeExpression .
  173 MultiplicativeExpression: MultiplicativeExpression . MUL_OP UnaryExpression
  174                         | MultiplicativeExpression . DIV_OP UnaryExpression
  175                         | MultiplicativeExpression . MOD_OP UnaryExpression

    DIV_OP  shift, and go to state 173
    MUL_OP  shift, and go to state 174
    MOD_OP  shift, and go to state 175

    $default  reduce using rule 171 (AdditiveExpression)


State 235

  170 AdditiveExpression: AdditiveExpression ADD_OP MultiplicativeExpression .
  173 MultiplicativeExpression: MultiplicativeExpression . MUL_OP UnaryExpression
  174                         | MultiplicativeExpression . DIV_OP UnaryExpression
  175                         | MultiplicativeExpression . MOD_OP UnaryExpression

    DIV_OP  shift, and go to state 173
    MUL_OP  shift, and go to state 174
    MOD_OP  shift, and go to state 175

    $default  reduce using rule 170 (AdditiveExpression)


State 236

  174 MultiplicativeExpression: MultiplicativeExpression DIV_OP UnaryExpression .

    $default  reduce using rule 174 (MultiplicativeExpression)


State 237

  173 MultiplicativeExpression: MultiplicativeExpression MUL_OP UnaryExpression .

    $default  reduce using rule 173 (MultiplicativeExpression)


State 238

  175 MultiplicativeExpression: MultiplicativeExpression MOD_OP UnaryExpression .

    $default  reduce using rule 175 (MultiplicativeExpression)


State 239

  138 LiteralField: QualifiedIdentifier PA_OP AssignmentExpression .

    $default  reduce using rule 138 (LiteralField)


State 240

  137 FieldList: FieldList SEP_OP LiteralField .

    $default  reduce using rule 137 (FieldList)


State 241

  142 ElementList: ElementList SEP_OP LiteralElement .

    $default  reduce using rule 142 (ElementList)


State 242

   36 DoStatement: DO CodeStatement WHILE ParenthesizedExpression .

    $default  reduce using rule 36 (DoStatement)


State 243

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP . OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 70 (OptionalExpression)

    Expression                go to state 111
    OptionalExpression        go to state 258
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 244

   41 ForInitializer: VariableDefinitionKind VariableBinding .

    $default  reduce using rule 41 (ForInitializer)


State 245

   59 ParameterSignature: OPEN_P Parameters CLOSE_P .

    $default  reduce using rule 59 (ParameterSignature)


State 246

   63 RequiredParameters: RequiredParameters SEP_OP . RequiredParameter

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    TypedIdentifier           go to state 188
    RequiredParameter         go to state 259
    ParenthesizedExpression   go to state 51
    Identifier                go to state 126
    TypeExpression            go to state 127
    NonAssignmentExpression   go to state 128
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 247

  132 NamedFunction: FUNCTION Identifier FunctionSignature Block .

    $default  reduce using rule 132 (NamedFunction)


State 248

   23 IfStatement: IF ParenthesizedExpression CodeStatement ELSE . CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 260
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 249

   24 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C CLOSE_C .

    $default  reduce using rule 24 (SwitchStatement)


State 250

   25 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C CaseGroups . LastCaseGroup CLOSE_C
   27 CaseGroups: CaseGroups . CaseGroup

    CASE     shift, and go to state 261
    DEFAULT  shift, and go to state 262

    CaseGroup      go to state 263
    LastCaseGroup  go to state 264
    CaseGuards     go to state 265


State 251

   51 VariableBindingList: VariableBindingList SEP_OP VariableBinding .

    $default  reduce using rule 51 (VariableBindingList)


State 252

   56 VariableInitializer: VA_OP AssignmentExpression .

    $default  reduce using rule 56 (VariableInitializer)


State 253

   91 NonAssignmentExpression: LogicalOrExpression TERNARY_OP NonAssignmentExpression . PA_OP NonAssignmentExpression

    PA_OP  shift, and go to state 266


State 254

  109 MemberOperator: OPEN_B ArgumentList CLOSE_B .

    $default  reduce using rule 109 (MemberOperator)


State 255

  116 ArgumentListPrefix: ArgumentListPrefix SEP_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 267
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 256

  112 Arguments: OPEN_P ArgumentList CLOSE_P .

    $default  reduce using rule 112 (Arguments)


State 257

   89 ConditionalExpression: LogicalOrExpression TERNARY_OP AssignmentExpression PA_OP . AssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    AssignmentExpression      go to state 268
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 258

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression . STMT_TER_OP OptionalExpression CLOSE_P CodeStatement

    STMT_TER_OP  shift, and go to state 269


State 259

   63 RequiredParameters: RequiredParameters SEP_OP RequiredParameter .

    $default  reduce using rule 63 (RequiredParameters)


State 260

   23 IfStatement: IF ParenthesizedExpression CodeStatement ELSE CodeStatement .

    $default  reduce using rule 23 (IfStatement)


State 261

   30 CaseGuards: CASE . Expression PA_OP

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    Expression                go to state 270
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 262

   31 CaseGuards: DEFAULT . PA_OP

    PA_OP  shift, and go to state 271


State 263

   27 CaseGroups: CaseGroups CaseGroup .

    $default  reduce using rule 27 (CaseGroups)


State 264

   25 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C CaseGroups LastCaseGroup . CLOSE_C

    CLOSE_C  shift, and go to state 272


State 265

   28 CaseGroup: CaseGuards . CaseStatementsPrefix
   29 LastCaseGroup: CaseGuards . CaseStatements

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 273
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    CaseStatements            go to state 274
    CaseStatementsPrefix      go to state 275
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 266

   91 NonAssignmentExpression: LogicalOrExpression TERNARY_OP NonAssignmentExpression PA_OP . NonAssignmentExpression

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    NonAssignmentExpression   go to state 276
    PostfixExpression         go to state 78
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 129
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 267

  116 ArgumentListPrefix: ArgumentListPrefix SEP_OP AssignmentExpression .

    $default  reduce using rule 116 (ArgumentListPrefix)


State 268

   89 ConditionalExpression: LogicalOrExpression TERNARY_OP AssignmentExpression PA_OP AssignmentExpression .

    $default  reduce using rule 89 (ConditionalExpression)


State 269

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP . OptionalExpression CLOSE_P CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 77
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    FUNCTION      shift, and go to state 22
    NEW           shift, and go to state 24
    ID            shift, and go to state 29

    $default  reduce using rule 70 (OptionalExpression)

    Expression                go to state 111
    OptionalExpression        go to state 277
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 270

   30 CaseGuards: CASE Expression . PA_OP
   68 Expression: Expression . SEP_OP AssignmentExpression

    PA_OP   shift, and go to state 278
    SEP_OP  shift, and go to state 130


State 271

   31 CaseGuards: DEFAULT PA_OP .

    $default  reduce using rule 31 (CaseGuards)


State 272

   25 SwitchStatement: SWITCH ParenthesizedExpression OPEN_C CaseGroups LastCaseGroup CLOSE_C .

    $default  reduce using rule 25 (SwitchStatement)


State 273

   32 CaseStatements: CodeStatement .
   34 CaseStatementsPrefix: CodeStatement .

    CLOSE_C   reduce using rule 32 (CaseStatements)
    $default  reduce using rule 34 (CaseStatementsPrefix)


State 274

   29 LastCaseGroup: CaseGuards CaseStatements .

    $default  reduce using rule 29 (LastCaseGroup)


State 275

   28 CaseGroup: CaseGuards CaseStatementsPrefix .
   33 CaseStatements: CaseStatementsPrefix . CodeStatement
   35 CaseStatementsPrefix: CaseStatementsPrefix . CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    $default  reduce using rule 28 (CaseGroup)

    CodeStatement             go to state 279
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 276

   91 NonAssignmentExpression: LogicalOrExpression TERNARY_OP NonAssignmentExpression PA_OP NonAssignmentExpression .

    $default  reduce using rule 91 (NonAssignmentExpression)


State 277

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression . CLOSE_P CodeStatement

    CLOSE_P  shift, and go to state 280


State 278

   30 CaseGuards: CASE Expression PA_OP .

    $default  reduce using rule 30 (CaseGuards)


State 279

   33 CaseStatements: CaseStatementsPrefix CodeStatement .
   35 CaseStatementsPrefix: CaseStatementsPrefix CodeStatement .

    CLOSE_C   reduce using rule 33 (CaseStatements)
    $default  reduce using rule 35 (CaseStatementsPrefix)


State 280

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P . CodeStatement

    NULL_V        shift, and go to state 1
    TRUE_V        shift, and go to state 2
    FALSE_V       shift, and go to state 3
    FLT_V         shift, and go to state 4
    INT_V         shift, and go to state 5
    STRING        shift, and go to state 6
    BIT_NOT_OP    shift, and go to state 7
    OPEN_C        shift, and go to state 8
    OPEN_B        shift, and go to state 9
    OPEN_P        shift, and go to state 10
    STMT_TER_OP   shift, and go to state 11
    UNIT_SUB_OP   shift, and go to state 12
    SUB_OP        shift, and go to state 13
    UNIT_ADD_OP   shift, and go to state 14
    ADD_OP        shift, and go to state 15
    LOGIC_NOT_OP  shift, and go to state 16
    BREAK         shift, and go to state 17
    CONTINUE      shift, and go to state 19
    DO            shift, and go to state 20
    FOR           shift, and go to state 21
    FUNCTION      shift, and go to state 22
    IF            shift, and go to state 23
    NEW           shift, and go to state 24
    RETURN        shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHILE         shift, and go to state 28
    ID            shift, and go to state 29

    CodeStatement             go to state 281
    EmptyStatement            go to state 35
    ExpressionStatement       go to state 36
    Block                     go to state 37
    IfStatement               go to state 38
    SwitchStatement           go to state 39
    DoStatement               go to state 40
    WhileStatement            go to state 41
    ForStatement              go to state 42
    ContinueStatement         go to state 43
    BreakStatement            go to state 44
    ReturnStatement           go to state 45
    Expression                go to state 49
    AssignmentExpression      go to state 50
    ParenthesizedExpression   go to state 51
    Identifier                go to state 52
    ConditionalExpression     go to state 53
    PostfixExpression         go to state 54
    FullPostfixExpression     go to state 55
    FullNewExpression         go to state 56
    ShortNewExpression        go to state 57
    PrimaryExpression         go to state 58
    SimpleExpression          go to state 59
    FunctionExpression        go to state 60
    AnonymousFunction         go to state 61
    NamedFunction             go to state 79
    QualifiedIdentifier       go to state 63
    ObjectLiteral             go to state 64
    ArrayLiteral              go to state 65
    LogicalOrExpression       go to state 66
    LogicalAndExpression      go to state 67
    BitwiseOrExpression       go to state 68
    BitwiseXorExpression      go to state 69
    BitwiseAndExpression      go to state 70
    EqualityExpression        go to state 71
    RelationalExpression      go to state 72
    ShiftExpression           go to state 73
    AdditiveExpression        go to state 74
    MultiplicativeExpression  go to state 75
    UnaryExpression           go to state 76


State 281

   38 ForStatement: FOR OPEN_P ForInitializer STMT_TER_OP OptionalExpression STMT_TER_OP OptionalExpression CLOSE_P CodeStatement .

    $default  reduce using rule 38 (ForStatement)
